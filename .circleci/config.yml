version: 2.1

jobs:
  build_test:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install --save

  build_docker_image:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker image
          command: |
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            IMAGE_NAME=nodejswebapp1:$TIMESTAMP
            echo "Building Docker image with tag: $TIMESTAMP"
            docker build -t $IMAGE_NAME -t arjun0201/nodejswebapp1:$TIMESTAMP -t arjun0201/nodejswebapp1:latest .
            echo $DOCKER_PASSWORD | docker login -u arjun0201 --password-stdin
            docker push arjun0201/nodejswebapp1:$TIMESTAMP
            docker push arjun0201/nodejswebapp1:latest
            echo "Image pushed with tag: $TIMESTAMP"
            echo $TIMESTAMP > /tmp/timestamp.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - timestamp.txt

  docker_push_nvdrdev:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: /workspace
      - run:
          name: Set AWS Credentials
          command: |
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - run:
          name: Push Docker image to AWS ECR
          command: |
            aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY_STLDEV
            AFT_ECR_NAME="n${CI_PROJECT_NAME}"
            BUILD_DATE=$(date +%d-%m-%Y)
            BUILD_NUMBER=${CI_PIPELINE_ID}
            TAG="${BUILD_NUMBER}-${BUILD_DATE}"
            TIMESTAMP=$(cat /workspace/timestamp.txt)
            docker tag arjun0201/nodejswebapp1:$TIMESTAMP ${DOCKER_REGISTRY_STLDEV}/${AFT_ECR_NAME}:${TAG}
            docker push ${DOCKER_REGISTRY_STLDEV}/${AFT_ECR_NAME}:${TAG}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_test
      - build_docker_image
      - docker_push_nvdrdev:
          requires:
            - build_docker_image
